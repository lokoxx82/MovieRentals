@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New rental form:</h2>

<form id="newRental">
    <div class="form-group">
        <label >Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required="" type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label >Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" class="form-control" value="" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <ul id="movies" name="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary"> 
        Submit
    </button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var vm = {
                movieIds:[]
            };

            //Filter customers
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minlength: 3,
                highlight:true
            }, {
                name: 'customers',
                    display: 'name',
                    limit: 8,
                source: customers
                }).on("typeahead:select", function(e, customer) {
                vm.customerId = customer.id;
                });

            //Filter movies
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minlength: 3,
                highlight:true
            }, {
                name: 'movies',
                    display: 'name',
                    limit: 8,
                source: movies
            }).on("typeahead:select", function(e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                $("#movie").typeahead("val", "");
                vm.movieIds.push(movie.id);

            });

            //Add custom validation to list of movies - at least 1
            $.validator.addMethod("atLeastOneMovie", function() {
                return vm.movieIds.length > 0;
            },"Please select at least one movie");

            //Add custom validator - if some tet is in customer but its not a valid customer
            $.validator.addMethod("validCustomer", function() {
                return vm.customerId && vm.customerId !== 0;
            },"Please select a valid customer");

            //Apply validation to the form
            var validator = $("#newRental").validate({
                submitHandler: function () {
                    //Submit the form if validation is ok
                    $.ajax({
                            url: "/api/rentals",
                            method: "post",
                            data: vm
                        })
                        .done(function() {
                            toastr.success("Rentals succesfully recorded.");
                            //Reset the form to empty
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();
                            //Reset viewModel
                            vm = { movieIds: [] };
                            //Reset the validator
                            validator.resetForm();
                        })
                        .fail(function() {
                            toastr.error("Rentals recording failed.");
                        });
                    return false;
                }
            });

            ////submiting the form
            //$("#newRental").submit(function(e) {
            //    e.preventDefault();
            //    $.ajax({
            //            url: "/api/rentals",
            //            method: "post",
            //            data: vm
            //        })
            //        .done(function() {
            //            toastr.success("Rentals succesfully recorded.");
            //        })
            //        .fail(function() {
            //            toastr.error("Rentals recording failed.");
            //        });

            //});
        });
    </script>
}
